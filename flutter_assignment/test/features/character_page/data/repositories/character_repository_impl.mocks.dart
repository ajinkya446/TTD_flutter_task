// Mocks generated by Mockito 5.2.0 from annotations
// in flutter_assignment/test/features/character_page/data/repositories/character_repository_impl.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:flutter_assignment/core/error/failure.dart' as _i5;
import 'package:flutter_assignment/features/character_page/data/datasource/character_remote_datasource.dart'
    as _i3;
import 'package:flutter_assignment/features/character_page/data/models/character_model.dart'
    as _i6;
import 'package:flutter_assignment/features/home_page/data/datasource/local_data_source.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [CharactersRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharacterRemoteDataSource extends _i1.Mock
    implements _i3.CharactersRemoteDatasource {
  MockCharacterRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.CharacterModels>>>
      fetchCharacters(List<String>? characters, int? id) => (super.noSuchMethod(
              Invocation.method(#fetchCharacters, [characters, id]),
              returnValue: Future<
                      _i2.Either<_i5.Failure, List<_i6.CharacterModels>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i6.CharacterModels>>()))
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.CharacterModels>>>);
}

/// A class which mocks [MoviesLocalDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock
    implements _i7.MoviesLocalDatasource {
  MockLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<String>> getCharacters(int? resultId) =>
      (super.noSuchMethod(Invocation.method(#getCharacters, [resultId]),
              returnValue: Future<List<String>>.value(<String>[]))
          as _i4.Future<List<String>>);
}
