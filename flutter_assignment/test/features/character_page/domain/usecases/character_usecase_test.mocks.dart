// Mocks generated by Mockito 5.2.0 from annotations
// in flutter_assignment/test/features/character_page/domain/usecases/character_usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:flutter_assignment/core/error/failure.dart' as _i6;
import 'package:flutter_assignment/features/character_page/data/models/character_model.dart'
    as _i7;
import 'package:flutter_assignment/features/character_page/domain/repository/character_repository.dart'
    as _i2;
import 'package:flutter_assignment/features/character_page/domain/usecases/charactaer_list.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeCharactersRepository_0 extends _i1.Fake
    implements _i2.CharactersRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [CharacterUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharacterList extends _i1.Mock implements _i4.CharacterUseCase {
  MockCharacterList() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CharactersRepository get repository => (super.noSuchMethod(
      Invocation.getter(#repository),
      returnValue: _FakeCharactersRepository_0()) as _i2.CharactersRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.CharacterModels>>> call(
          _i4.CharacterUsecaseParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue: Future<
                      _i3.Either<_i6.Failure, List<_i7.CharacterModels>>>.value(
                  _FakeEither_1<_i6.Failure, List<_i7.CharacterModels>>()))
          as _i5.Future<_i3.Either<_i6.Failure, List<_i7.CharacterModels>>>);
}
